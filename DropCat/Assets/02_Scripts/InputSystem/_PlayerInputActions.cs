//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/02_Scripts/InputSystem/_PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @_PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @_PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""_PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""27308a8c-afc1-4267-a1be-235655bcbed5"",
            ""actions"": [
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""0d9cc1c7-d6d7-46a4-a4e7-a8ae02d5bd75"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TutorialContinueDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""e75273e8-46d0-4306-983d-1be7e01be3c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerJump"",
                    ""type"": ""Button"",
                    ""id"": ""d52e1413-14a7-4d87-aea6-d1511bd1910b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerAttack"",
                    ""type"": ""Value"",
                    ""id"": ""b8dea17b-a9a9-4653-8ff1-55e3d21d260f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerHorizontalAttack"",
                    ""type"": ""Value"",
                    ""id"": ""880e1453-c9af-4486-b249-2d3fd9b267bf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerVerticalAttack"",
                    ""type"": ""Button"",
                    ""id"": ""28786ea9-760d-40b5-b374-55d40f5b8bb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayerTeleport"",
                    ""type"": ""Button"",
                    ""id"": ""49aa4aac-cfd1-441f-9b3e-40f2127f94b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""802ae190-3f08-453d-899a-bee785523321"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerAttack_Mobile"",
                    ""type"": ""Button"",
                    ""id"": ""2b66cfc7-dc0c-4e2a-9ee1-8269df8e89b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerTeleport_Mobile"",
                    ""type"": ""Button"",
                    ""id"": ""8adb3d9d-e9e1-4bef-93b7-7d15b0d236d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerJump_Mobile"",
                    ""type"": ""Button"",
                    ""id"": ""097f1bb4-7b2d-47ab-995a-6fda048a7c58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD [Keyboard]"",
                    ""id"": ""f7f64e27-a0b7-4464-b310-357e8e57f47b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""174e8b9b-c028-4ed5-8ead-342ec130f60d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""66c7c2e5-6c80-48c9-88b4-6070212cdc4a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""95720646-46fb-4ee0-ae02-0fca57260de3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4e06427e-b654-4385-a4af-8ad798c36bf2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftStick [Gamepad]"",
                    ""id"": ""2665ed30-f94b-4c90-a4f7-e762f362c5ec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""08061a87-e1ed-460e-a00e-24f60de1d922"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1bf6710e-85be-47b7-bad1-8ccf8dbba434"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""372a5948-edcd-4f90-b0f2-ec8a6e1621f1"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Joystick_Mobile"",
                    ""id"": ""7025ada3-6f3d-49c0-9483-1f60d081a5bc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""876b0798-c570-4f9e-8d22-d193e62baff4"",
                    ""path"": ""<AndroidJoystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b6ec234a-cede-4306-afb7-f2b6c25c3e66"",
                    ""path"": ""<AndroidJoystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""56b59675-ebea-43ea-b04e-dce81cb94300"",
                    ""path"": ""<AndroidJoystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b0849f37-a0da-4368-91e9-898653436c17"",
                    ""path"": ""<AndroidJoystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dfd62f60-0fbc-4359-8d83-f333cdacc07d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""XYAB[Gamepad]"",
                    ""id"": ""22544710-2d20-407d-bfef-a0ba617f76df"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7ae6f5f9-eaea-46de-a075-9849bfa3a3e5"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""47d153da-fd96-4c49-8b6c-e2fa2c97b5a3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""29f3cccf-edd8-4a34-a853-02f59bbe14af"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""de2d377e-752a-4b14-a004-470ed9a2518c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow[Keyboard]"",
                    ""id"": ""643085a2-f163-4de5-a89d-b4f4a0d49174"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f3f317b2-c22a-4350-b03e-937a9801b2b0"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5bc06c12-0536-45b5-8383-451fd4778e7c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""059bcea3-43d3-4880-9a59-14c0d2de8834"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bf68212c-f6fe-40bb-83a9-e65c98008831"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ButtonWE [Gamepad]"",
                    ""id"": ""77461520-a5d9-4ac6-b028-f14a9270e77a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerHorizontalAttack"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""79353c1f-60ea-49f8-899b-3b54fb2c0f91"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerHorizontalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5489c891-b87c-44ff-bf7c-ac72eb2e1c8f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerHorizontalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftOrRight [Mouse]"",
                    ""id"": ""ff53e9da-bf3d-4674-8e76-61a5568cf7a7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerHorizontalAttack"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""59efd632-3abe-43ef-91f0-372de34fea8c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerHorizontalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""41830e74-9a32-49ae-ae09-8f3d18767932"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerHorizontalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""affae0e0-e590-482b-811e-fbad95a73ee0"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PlayerTeleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e173b92-d100-4a9a-97be-507d42e1799f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerTeleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a235a333-403e-4b83-8e7c-aac0c48cb912"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c21e9eef-bb8a-44cb-84c6-c46f9d5b5979"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PlayerVerticalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0b53f8c-8dd2-4531-b5c2-cb36acea9b50"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerVerticalAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d60d473-f585-4467-9c05-593edeeface6"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64429080-9503-4641-a1cb-8dace5007e4d"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3211c416-af41-4f4b-9c68-816c429a0ef0"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""TutorialContinueDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e681b6cc-7d19-4079-b47b-d03705f46c42"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TutorialContinueDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34746976-69db-43ef-889e-94d603868201"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PlayerAttack_Mobile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11823a87-a246-4f00-968b-05c93bea8e77"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PlayerTeleport_Mobile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54742b94-7f2b-41fa-96e0-9455535e5a5c"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""PlayerJump_Mobile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIs"",
            ""id"": ""adf91873-922f-4557-995c-1e1676b22a6a"",
            ""actions"": [
                {
                    ""name"": ""ResumeGame"",
                    ""type"": ""Button"",
                    ""id"": ""9f440d72-423a-4ffc-b173-36d1184ca211"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateMenuLeft"",
                    ""type"": ""Button"",
                    ""id"": ""6d4f0eb1-538b-4341-8ec9-cf93fa878a05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateMenuRight"",
                    ""type"": ""Button"",
                    ""id"": ""79c60057-8506-4875-b408-8eb93e1a5a4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ClickMenu"",
                    ""type"": ""Button"",
                    ""id"": ""4c7354fe-9ebe-414b-9af8-c61e78498634"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ContinueDialogue"",
                    ""type"": ""Button"",
                    ""id"": ""c3eee1c8-e507-4c30-ba5f-503dd9c2770c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateMenuUp"",
                    ""type"": ""Button"",
                    ""id"": ""02f398cc-b388-4e5d-8e26-723662440176"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateMenuDown"",
                    ""type"": ""Button"",
                    ""id"": ""1b58052e-0e0e-4c8b-9019-2b7b44103d27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""711484ca-e03c-40c0-970c-e3e8571204ec"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ResumeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b69e29d6-9ee6-4384-9748-cb4a258abdc4"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ResumeGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b18f382-83ec-4f4b-a677-d71342735b5b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NavigateMenuLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""184eda77-4b1e-456a-b7e6-d3c4116d0c89"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NavigateMenuLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b8ffaca-bcf7-4a74-958b-6cd3fa295b1c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NavigateMenuRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""728e3f93-2bfb-423b-be80-286c4ab94f0d"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NavigateMenuRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87946a24-7d8a-4447-b274-2aaffa64490a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ClickMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f972836-f05e-4c1d-a81c-ccc6b6d486a8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ClickMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""033d4fff-7f63-4858-abcc-c4590d549cab"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ContinueDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11a4d80d-79b6-4f65-9bb0-f165a4a304f0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch;Keyboard&Mouse"",
                    ""action"": ""ContinueDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bc57ba1-dc75-4403-9e1c-be8989194022"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NavigateMenuUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4d7adcc-74a7-4c25-b635-132f876ef7a9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NavigateMenuUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f58963dc-b7ea-4783-a3a5-5c2045202ffa"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NavigateMenuDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""265f8c4e-2a7c-4309-bb81-34487dd32250"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NavigateMenuDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Development"",
            ""id"": ""d739e622-3813-4009-a63e-c18bce9a19d9"",
            ""actions"": [
                {
                    ""name"": ""EnableDeveloperMode"",
                    ""type"": ""Button"",
                    ""id"": ""3f666480-d95b-432a-916c-bbbe2871af14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap(tapCount=3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""eb7c58eb-6234-4d49-a9b4-b74a5e906fc8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""07584008-15d4-42c2-a982-ed847d1be04d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnableProp"",
                    ""type"": ""Button"",
                    ""id"": ""4d0ff88c-d915-4849-b2ab-fba1f4ef40e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8078abf8-d4d1-4769-b884-77865c97fe14"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EnableDeveloperMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9abd5fe8-48f7-4758-90f2-26dcd2d17372"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EnableDeveloperMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""271b3ebe-c406-44ca-ba84-8b29c6baaace"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07e39ef8-42c4-437a-9c21-41a4dfbf1da8"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62be1fdc-149b-40e2-8e34-5e176d3bdc60"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SpawnEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0caa6350-80ed-4cf5-a4a6-6fcd108f8831"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SpawnEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0916bb2-7834-4a94-a910-34854eed4117"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""EnableProp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96dad61b-ee3c-4738-9bf6-2445486adbbe"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""EnableProp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""id"": ""f580d583-696b-465e-9018-96fc2337327a"",
            ""actions"": [
                {
                    ""name"": ""PrimaryContact"",
                    ""type"": ""PassThrough"",
                    ""id"": ""02031b36-68c2-4aed-95a6-f9b77f4667f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d47a9d2f-55d6-4204-b0a4-c2fddd372a1f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchAnyWhereToContinue"",
                    ""type"": ""Button"",
                    ""id"": ""e71f8633-9fcc-4cf1-b4f8-59f57ae469c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""02e07332-b07d-4731-ae73-96e27c92ccd5"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01136fd4-efc9-4e00-96a5-53414a0ff6ef"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ac68d21-a7f5-4333-8bbe-f951eecc8d2e"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchAnyWhereToContinue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_PlayerMove = m_Player.FindAction("PlayerMove", throwIfNotFound: true);
        m_Player_TutorialContinueDialogue = m_Player.FindAction("TutorialContinueDialogue", throwIfNotFound: true);
        m_Player_PlayerJump = m_Player.FindAction("PlayerJump", throwIfNotFound: true);
        m_Player_PlayerAttack = m_Player.FindAction("PlayerAttack", throwIfNotFound: true);
        m_Player_PlayerHorizontalAttack = m_Player.FindAction("PlayerHorizontalAttack", throwIfNotFound: true);
        m_Player_PlayerVerticalAttack = m_Player.FindAction("PlayerVerticalAttack", throwIfNotFound: true);
        m_Player_PlayerTeleport = m_Player.FindAction("PlayerTeleport", throwIfNotFound: true);
        m_Player_PauseGame = m_Player.FindAction("PauseGame", throwIfNotFound: true);
        m_Player_PlayerAttack_Mobile = m_Player.FindAction("PlayerAttack_Mobile", throwIfNotFound: true);
        m_Player_PlayerTeleport_Mobile = m_Player.FindAction("PlayerTeleport_Mobile", throwIfNotFound: true);
        m_Player_PlayerJump_Mobile = m_Player.FindAction("PlayerJump_Mobile", throwIfNotFound: true);
        // UIs
        m_UIs = asset.FindActionMap("UIs", throwIfNotFound: true);
        m_UIs_ResumeGame = m_UIs.FindAction("ResumeGame", throwIfNotFound: true);
        m_UIs_NavigateMenuLeft = m_UIs.FindAction("NavigateMenuLeft", throwIfNotFound: true);
        m_UIs_NavigateMenuRight = m_UIs.FindAction("NavigateMenuRight", throwIfNotFound: true);
        m_UIs_ClickMenu = m_UIs.FindAction("ClickMenu", throwIfNotFound: true);
        m_UIs_ContinueDialogue = m_UIs.FindAction("ContinueDialogue", throwIfNotFound: true);
        m_UIs_NavigateMenuUp = m_UIs.FindAction("NavigateMenuUp", throwIfNotFound: true);
        m_UIs_NavigateMenuDown = m_UIs.FindAction("NavigateMenuDown", throwIfNotFound: true);
        // Development
        m_Development = asset.FindActionMap("Development", throwIfNotFound: true);
        m_Development_EnableDeveloperMode = m_Development.FindAction("EnableDeveloperMode", throwIfNotFound: true);
        m_Development_PauseGame = m_Development.FindAction("PauseGame", throwIfNotFound: true);
        m_Development_SpawnEnemy = m_Development.FindAction("SpawnEnemy", throwIfNotFound: true);
        m_Development_EnableProp = m_Development.FindAction("EnableProp", throwIfNotFound: true);
        // Touch
        m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
        m_Touch_PrimaryContact = m_Touch.FindAction("PrimaryContact", throwIfNotFound: true);
        m_Touch_PrimaryPosition = m_Touch.FindAction("PrimaryPosition", throwIfNotFound: true);
        m_Touch_TouchAnyWhereToContinue = m_Touch.FindAction("TouchAnyWhereToContinue", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_PlayerMove;
    private readonly InputAction m_Player_TutorialContinueDialogue;
    private readonly InputAction m_Player_PlayerJump;
    private readonly InputAction m_Player_PlayerAttack;
    private readonly InputAction m_Player_PlayerHorizontalAttack;
    private readonly InputAction m_Player_PlayerVerticalAttack;
    private readonly InputAction m_Player_PlayerTeleport;
    private readonly InputAction m_Player_PauseGame;
    private readonly InputAction m_Player_PlayerAttack_Mobile;
    private readonly InputAction m_Player_PlayerTeleport_Mobile;
    private readonly InputAction m_Player_PlayerJump_Mobile;
    public struct PlayerActions
    {
        private @_PlayerInputActions m_Wrapper;
        public PlayerActions(@_PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PlayerMove => m_Wrapper.m_Player_PlayerMove;
        public InputAction @TutorialContinueDialogue => m_Wrapper.m_Player_TutorialContinueDialogue;
        public InputAction @PlayerJump => m_Wrapper.m_Player_PlayerJump;
        public InputAction @PlayerAttack => m_Wrapper.m_Player_PlayerAttack;
        public InputAction @PlayerHorizontalAttack => m_Wrapper.m_Player_PlayerHorizontalAttack;
        public InputAction @PlayerVerticalAttack => m_Wrapper.m_Player_PlayerVerticalAttack;
        public InputAction @PlayerTeleport => m_Wrapper.m_Player_PlayerTeleport;
        public InputAction @PauseGame => m_Wrapper.m_Player_PauseGame;
        public InputAction @PlayerAttack_Mobile => m_Wrapper.m_Player_PlayerAttack_Mobile;
        public InputAction @PlayerTeleport_Mobile => m_Wrapper.m_Player_PlayerTeleport_Mobile;
        public InputAction @PlayerJump_Mobile => m_Wrapper.m_Player_PlayerJump_Mobile;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @PlayerMove.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerMove;
                @PlayerMove.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerMove;
                @PlayerMove.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerMove;
                @TutorialContinueDialogue.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTutorialContinueDialogue;
                @TutorialContinueDialogue.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTutorialContinueDialogue;
                @TutorialContinueDialogue.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnTutorialContinueDialogue;
                @PlayerJump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerJump;
                @PlayerJump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerJump;
                @PlayerJump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerJump;
                @PlayerAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerAttack;
                @PlayerAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerAttack;
                @PlayerAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerAttack;
                @PlayerHorizontalAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerHorizontalAttack;
                @PlayerHorizontalAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerHorizontalAttack;
                @PlayerHorizontalAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerHorizontalAttack;
                @PlayerVerticalAttack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerVerticalAttack;
                @PlayerVerticalAttack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerVerticalAttack;
                @PlayerVerticalAttack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerVerticalAttack;
                @PlayerTeleport.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerTeleport;
                @PlayerTeleport.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerTeleport;
                @PlayerTeleport.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerTeleport;
                @PauseGame.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPauseGame;
                @PauseGame.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPauseGame;
                @PauseGame.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPauseGame;
                @PlayerAttack_Mobile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerAttack_Mobile;
                @PlayerAttack_Mobile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerAttack_Mobile;
                @PlayerAttack_Mobile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerAttack_Mobile;
                @PlayerTeleport_Mobile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerTeleport_Mobile;
                @PlayerTeleport_Mobile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerTeleport_Mobile;
                @PlayerTeleport_Mobile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerTeleport_Mobile;
                @PlayerJump_Mobile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerJump_Mobile;
                @PlayerJump_Mobile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerJump_Mobile;
                @PlayerJump_Mobile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayerJump_Mobile;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PlayerMove.started += instance.OnPlayerMove;
                @PlayerMove.performed += instance.OnPlayerMove;
                @PlayerMove.canceled += instance.OnPlayerMove;
                @TutorialContinueDialogue.started += instance.OnTutorialContinueDialogue;
                @TutorialContinueDialogue.performed += instance.OnTutorialContinueDialogue;
                @TutorialContinueDialogue.canceled += instance.OnTutorialContinueDialogue;
                @PlayerJump.started += instance.OnPlayerJump;
                @PlayerJump.performed += instance.OnPlayerJump;
                @PlayerJump.canceled += instance.OnPlayerJump;
                @PlayerAttack.started += instance.OnPlayerAttack;
                @PlayerAttack.performed += instance.OnPlayerAttack;
                @PlayerAttack.canceled += instance.OnPlayerAttack;
                @PlayerHorizontalAttack.started += instance.OnPlayerHorizontalAttack;
                @PlayerHorizontalAttack.performed += instance.OnPlayerHorizontalAttack;
                @PlayerHorizontalAttack.canceled += instance.OnPlayerHorizontalAttack;
                @PlayerVerticalAttack.started += instance.OnPlayerVerticalAttack;
                @PlayerVerticalAttack.performed += instance.OnPlayerVerticalAttack;
                @PlayerVerticalAttack.canceled += instance.OnPlayerVerticalAttack;
                @PlayerTeleport.started += instance.OnPlayerTeleport;
                @PlayerTeleport.performed += instance.OnPlayerTeleport;
                @PlayerTeleport.canceled += instance.OnPlayerTeleport;
                @PauseGame.started += instance.OnPauseGame;
                @PauseGame.performed += instance.OnPauseGame;
                @PauseGame.canceled += instance.OnPauseGame;
                @PlayerAttack_Mobile.started += instance.OnPlayerAttack_Mobile;
                @PlayerAttack_Mobile.performed += instance.OnPlayerAttack_Mobile;
                @PlayerAttack_Mobile.canceled += instance.OnPlayerAttack_Mobile;
                @PlayerTeleport_Mobile.started += instance.OnPlayerTeleport_Mobile;
                @PlayerTeleport_Mobile.performed += instance.OnPlayerTeleport_Mobile;
                @PlayerTeleport_Mobile.canceled += instance.OnPlayerTeleport_Mobile;
                @PlayerJump_Mobile.started += instance.OnPlayerJump_Mobile;
                @PlayerJump_Mobile.performed += instance.OnPlayerJump_Mobile;
                @PlayerJump_Mobile.canceled += instance.OnPlayerJump_Mobile;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UIs
    private readonly InputActionMap m_UIs;
    private IUIsActions m_UIsActionsCallbackInterface;
    private readonly InputAction m_UIs_ResumeGame;
    private readonly InputAction m_UIs_NavigateMenuLeft;
    private readonly InputAction m_UIs_NavigateMenuRight;
    private readonly InputAction m_UIs_ClickMenu;
    private readonly InputAction m_UIs_ContinueDialogue;
    private readonly InputAction m_UIs_NavigateMenuUp;
    private readonly InputAction m_UIs_NavigateMenuDown;
    public struct UIsActions
    {
        private @_PlayerInputActions m_Wrapper;
        public UIsActions(@_PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ResumeGame => m_Wrapper.m_UIs_ResumeGame;
        public InputAction @NavigateMenuLeft => m_Wrapper.m_UIs_NavigateMenuLeft;
        public InputAction @NavigateMenuRight => m_Wrapper.m_UIs_NavigateMenuRight;
        public InputAction @ClickMenu => m_Wrapper.m_UIs_ClickMenu;
        public InputAction @ContinueDialogue => m_Wrapper.m_UIs_ContinueDialogue;
        public InputAction @NavigateMenuUp => m_Wrapper.m_UIs_NavigateMenuUp;
        public InputAction @NavigateMenuDown => m_Wrapper.m_UIs_NavigateMenuDown;
        public InputActionMap Get() { return m_Wrapper.m_UIs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIsActions set) { return set.Get(); }
        public void SetCallbacks(IUIsActions instance)
        {
            if (m_Wrapper.m_UIsActionsCallbackInterface != null)
            {
                @ResumeGame.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnResumeGame;
                @ResumeGame.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnResumeGame;
                @ResumeGame.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnResumeGame;
                @NavigateMenuLeft.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuLeft;
                @NavigateMenuLeft.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuLeft;
                @NavigateMenuLeft.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuLeft;
                @NavigateMenuRight.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuRight;
                @NavigateMenuRight.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuRight;
                @NavigateMenuRight.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuRight;
                @ClickMenu.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnClickMenu;
                @ClickMenu.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnClickMenu;
                @ClickMenu.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnClickMenu;
                @ContinueDialogue.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnContinueDialogue;
                @ContinueDialogue.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnContinueDialogue;
                @ContinueDialogue.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnContinueDialogue;
                @NavigateMenuUp.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuUp;
                @NavigateMenuUp.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuUp;
                @NavigateMenuUp.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuUp;
                @NavigateMenuDown.started -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuDown;
                @NavigateMenuDown.performed -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuDown;
                @NavigateMenuDown.canceled -= m_Wrapper.m_UIsActionsCallbackInterface.OnNavigateMenuDown;
            }
            m_Wrapper.m_UIsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ResumeGame.started += instance.OnResumeGame;
                @ResumeGame.performed += instance.OnResumeGame;
                @ResumeGame.canceled += instance.OnResumeGame;
                @NavigateMenuLeft.started += instance.OnNavigateMenuLeft;
                @NavigateMenuLeft.performed += instance.OnNavigateMenuLeft;
                @NavigateMenuLeft.canceled += instance.OnNavigateMenuLeft;
                @NavigateMenuRight.started += instance.OnNavigateMenuRight;
                @NavigateMenuRight.performed += instance.OnNavigateMenuRight;
                @NavigateMenuRight.canceled += instance.OnNavigateMenuRight;
                @ClickMenu.started += instance.OnClickMenu;
                @ClickMenu.performed += instance.OnClickMenu;
                @ClickMenu.canceled += instance.OnClickMenu;
                @ContinueDialogue.started += instance.OnContinueDialogue;
                @ContinueDialogue.performed += instance.OnContinueDialogue;
                @ContinueDialogue.canceled += instance.OnContinueDialogue;
                @NavigateMenuUp.started += instance.OnNavigateMenuUp;
                @NavigateMenuUp.performed += instance.OnNavigateMenuUp;
                @NavigateMenuUp.canceled += instance.OnNavigateMenuUp;
                @NavigateMenuDown.started += instance.OnNavigateMenuDown;
                @NavigateMenuDown.performed += instance.OnNavigateMenuDown;
                @NavigateMenuDown.canceled += instance.OnNavigateMenuDown;
            }
        }
    }
    public UIsActions @UIs => new UIsActions(this);

    // Development
    private readonly InputActionMap m_Development;
    private IDevelopmentActions m_DevelopmentActionsCallbackInterface;
    private readonly InputAction m_Development_EnableDeveloperMode;
    private readonly InputAction m_Development_PauseGame;
    private readonly InputAction m_Development_SpawnEnemy;
    private readonly InputAction m_Development_EnableProp;
    public struct DevelopmentActions
    {
        private @_PlayerInputActions m_Wrapper;
        public DevelopmentActions(@_PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnableDeveloperMode => m_Wrapper.m_Development_EnableDeveloperMode;
        public InputAction @PauseGame => m_Wrapper.m_Development_PauseGame;
        public InputAction @SpawnEnemy => m_Wrapper.m_Development_SpawnEnemy;
        public InputAction @EnableProp => m_Wrapper.m_Development_EnableProp;
        public InputActionMap Get() { return m_Wrapper.m_Development; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DevelopmentActions set) { return set.Get(); }
        public void SetCallbacks(IDevelopmentActions instance)
        {
            if (m_Wrapper.m_DevelopmentActionsCallbackInterface != null)
            {
                @EnableDeveloperMode.started -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnEnableDeveloperMode;
                @EnableDeveloperMode.performed -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnEnableDeveloperMode;
                @EnableDeveloperMode.canceled -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnEnableDeveloperMode;
                @PauseGame.started -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnPauseGame;
                @PauseGame.performed -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnPauseGame;
                @PauseGame.canceled -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnPauseGame;
                @SpawnEnemy.started -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnSpawnEnemy;
                @SpawnEnemy.performed -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnSpawnEnemy;
                @SpawnEnemy.canceled -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnSpawnEnemy;
                @EnableProp.started -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnEnableProp;
                @EnableProp.performed -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnEnableProp;
                @EnableProp.canceled -= m_Wrapper.m_DevelopmentActionsCallbackInterface.OnEnableProp;
            }
            m_Wrapper.m_DevelopmentActionsCallbackInterface = instance;
            if (instance != null)
            {
                @EnableDeveloperMode.started += instance.OnEnableDeveloperMode;
                @EnableDeveloperMode.performed += instance.OnEnableDeveloperMode;
                @EnableDeveloperMode.canceled += instance.OnEnableDeveloperMode;
                @PauseGame.started += instance.OnPauseGame;
                @PauseGame.performed += instance.OnPauseGame;
                @PauseGame.canceled += instance.OnPauseGame;
                @SpawnEnemy.started += instance.OnSpawnEnemy;
                @SpawnEnemy.performed += instance.OnSpawnEnemy;
                @SpawnEnemy.canceled += instance.OnSpawnEnemy;
                @EnableProp.started += instance.OnEnableProp;
                @EnableProp.performed += instance.OnEnableProp;
                @EnableProp.canceled += instance.OnEnableProp;
            }
        }
    }
    public DevelopmentActions @Development => new DevelopmentActions(this);

    // Touch
    private readonly InputActionMap m_Touch;
    private ITouchActions m_TouchActionsCallbackInterface;
    private readonly InputAction m_Touch_PrimaryContact;
    private readonly InputAction m_Touch_PrimaryPosition;
    private readonly InputAction m_Touch_TouchAnyWhereToContinue;
    public struct TouchActions
    {
        private @_PlayerInputActions m_Wrapper;
        public TouchActions(@_PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryContact => m_Wrapper.m_Touch_PrimaryContact;
        public InputAction @PrimaryPosition => m_Wrapper.m_Touch_PrimaryPosition;
        public InputAction @TouchAnyWhereToContinue => m_Wrapper.m_Touch_TouchAnyWhereToContinue;
        public InputActionMap Get() { return m_Wrapper.m_Touch; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
        public void SetCallbacks(ITouchActions instance)
        {
            if (m_Wrapper.m_TouchActionsCallbackInterface != null)
            {
                @PrimaryContact.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryContact;
                @PrimaryContact.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryContact;
                @PrimaryContact.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryContact;
                @PrimaryPosition.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryPosition;
                @PrimaryPosition.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryPosition;
                @PrimaryPosition.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnPrimaryPosition;
                @TouchAnyWhereToContinue.started -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchAnyWhereToContinue;
                @TouchAnyWhereToContinue.performed -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchAnyWhereToContinue;
                @TouchAnyWhereToContinue.canceled -= m_Wrapper.m_TouchActionsCallbackInterface.OnTouchAnyWhereToContinue;
            }
            m_Wrapper.m_TouchActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PrimaryContact.started += instance.OnPrimaryContact;
                @PrimaryContact.performed += instance.OnPrimaryContact;
                @PrimaryContact.canceled += instance.OnPrimaryContact;
                @PrimaryPosition.started += instance.OnPrimaryPosition;
                @PrimaryPosition.performed += instance.OnPrimaryPosition;
                @PrimaryPosition.canceled += instance.OnPrimaryPosition;
                @TouchAnyWhereToContinue.started += instance.OnTouchAnyWhereToContinue;
                @TouchAnyWhereToContinue.performed += instance.OnTouchAnyWhereToContinue;
                @TouchAnyWhereToContinue.canceled += instance.OnTouchAnyWhereToContinue;
            }
        }
    }
    public TouchActions @Touch => new TouchActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnPlayerMove(InputAction.CallbackContext context);
        void OnTutorialContinueDialogue(InputAction.CallbackContext context);
        void OnPlayerJump(InputAction.CallbackContext context);
        void OnPlayerAttack(InputAction.CallbackContext context);
        void OnPlayerHorizontalAttack(InputAction.CallbackContext context);
        void OnPlayerVerticalAttack(InputAction.CallbackContext context);
        void OnPlayerTeleport(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
        void OnPlayerAttack_Mobile(InputAction.CallbackContext context);
        void OnPlayerTeleport_Mobile(InputAction.CallbackContext context);
        void OnPlayerJump_Mobile(InputAction.CallbackContext context);
    }
    public interface IUIsActions
    {
        void OnResumeGame(InputAction.CallbackContext context);
        void OnNavigateMenuLeft(InputAction.CallbackContext context);
        void OnNavigateMenuRight(InputAction.CallbackContext context);
        void OnClickMenu(InputAction.CallbackContext context);
        void OnContinueDialogue(InputAction.CallbackContext context);
        void OnNavigateMenuUp(InputAction.CallbackContext context);
        void OnNavigateMenuDown(InputAction.CallbackContext context);
    }
    public interface IDevelopmentActions
    {
        void OnEnableDeveloperMode(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
        void OnSpawnEnemy(InputAction.CallbackContext context);
        void OnEnableProp(InputAction.CallbackContext context);
    }
    public interface ITouchActions
    {
        void OnPrimaryContact(InputAction.CallbackContext context);
        void OnPrimaryPosition(InputAction.CallbackContext context);
        void OnTouchAnyWhereToContinue(InputAction.CallbackContext context);
    }
}
